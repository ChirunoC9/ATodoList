<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:ATodoList.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        xmlns:modles="using:ATodoList.Models"
		xmlns:views="using:ATodoList.Views"
        x:Class="ATodoList.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        Title="ATodoList"
        Width="800"
        Height="600"
        TransparencyLevelHint="AcrylicBlur"
        Background="Transparent"
        ExtendClientAreaToDecorationsHint="True"
        WindowStartupLocation="CenterScreen"
        >

	<Design.DataContext>
		<!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
		<vm:MainWindowViewModel/>
	</Design.DataContext>

	<Window.Resources>
		<views:TextLineCaseConverter x:Key="TextLineCaseConverter"/>
		<views:TextColorFinishCaseConverter x:Key="TextColorFinishCaseConverter"/>
	</Window.Resources>
	
	<Window.Styles>
	<!--
		<Style Selector="ListBox#panel ListBoxItem > ContentPresenter">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="IsHitTestVisible" Value=""/> 
		</Style>
	
		-->
		
	</Window.Styles>

	<Panel>
		<!--
            ‰∫öÂÖãÂäõ
        -->
		<ExperimentalAcrylicBorder IsHitTestVisible="False">
			<ExperimentalAcrylicBorder.Material>
				<ExperimentalAcrylicMaterial
                    BackgroundSource="Digger"
                    TintColor="Black"
                    TintOpacity="0.9"
                    MaterialOpacity="0.75" />
			</ExperimentalAcrylicBorder.Material>
		</ExperimentalAcrylicBorder>

		<Grid ColumnDefinitions="*, 1, 3*">

			<!-- Â∑¶Ëæπ -->
			<DockPanel Grid.Column="0"
                       Margin="30">
				<!-- ÊòæÁ§∫‰ø°ÊÅØ -->
				<StackPanel DockPanel.Dock="Top"
                            Margin="0 5">
					<TextBlock HorizontalAlignment="Center">
                        <PathIcon Data="{StaticResource preview_link_regular}"/> ToDo
                    </TextBlock>
				</StackPanel>

				<!-- Ê∑ªÂä†ÈõÜÂêà 
                <Button DockPanel.Dock="Bottom"
                        HorizontalAlignment="Stretch"
                        Margin="0"
                        Content="Ê∑ªÂä†ÂàóË°®"
                        ToolTip.Tip="Ê∑ªÂä†ÂàóË°®..."
						ToolTip.ShowDelay="3"
						ToolTip.Placement="Pointer"
                        />
                -->

				<!-- Ê∑ªÂä†ÈõÜÂêà -->
				<Grid DockPanel.Dock="Bottom"
					  ColumnDefinitions="*,3*"
					  RowDefinitions="*">
					<RepeatButton Grid.Column="0"
							Margin="2 0"
						    Classes="Primary"
						    Theme="{DynamicResource SolidButton}"
						    Click="CommitGroupNmaeButton_CommitClick"
						    x:Name="CommitGroupNameButton">
						<PathIcon Data="{StaticResource arrow_curve_up_right_regular}"
								  Foreground="Red"/>
					</RepeatButton>
					<TextBox Grid.Column="1"
							 Margin="2 0"
							 TextWrapping="NoWrap"
							 Name="InputGroupName"
				             Watermark="input..."
							 TextChanged="InputGroupTextBox_TextChanged"
				             Text="{Binding InputGroupName}"
							 x:Name="InputGroupNameTextBox"/>
				</Grid>

				<!-- item -->
				<ListBox Name="GroupItemList"
						 ItemsSource="{Binding GroupItems}"
                         Margin="0 5"
					     SelectionChanged="GroupItemList_SelectionChanged">
					<ListBox.ContextMenu>
						<ContextMenu Name="GroupItemList_ContextMenu">
							<MenuItem Header="ÈáçÂëΩÂêç">
								<MenuItem.Icon>
									<TextBlock>üòä</TextBlock>
								</MenuItem.Icon>
								<TextBox HorizontalAlignment="Stretch"
										 Watermark="Êñ∞ÂêçÂ≠ó"
										 TextWrapping="NoWrap"
										 KeyDown="GroupItemList_ContextMenu_TextBoxKeyDown_EnterSubmit"
										 Width="100"/>
							</MenuItem>
							<MenuItem Header="Â§çÂà∂"
									  Click="Async_GroupItemList_ContextMenu_CopyMenuItem_CopyGroupName"/>
							<MenuItem Header="Âà†Èô§"
									  Click="GroupItemList_ContextMenu_RemoveMeunItem_RemoveSelectedGroup"/>
						</ContextMenu>
					</ListBox.ContextMenu>

					<ListBox.ItemTemplate>
						<DataTemplate x:DataType="modles:TodoGroupItem">
							<StackPanel HorizontalAlignment="Center"
										Orientation="Horizontal">
								<TextBlock Text="{Binding Name}"/>
							</StackPanel>
						</DataTemplate>
					</ListBox.ItemTemplate>
				</ListBox>

			</DockPanel>

			<!-- Á∫ø-->
			<GridSplitter Grid.Column="1"
						  Background="WhiteSmoke"
			              Margin="5 30"
			              Opacity="0.4"
			              ResizeDirection="Columns"/>

			<!-- Âè≥Ëæπ -->
			<DockPanel Grid.Column="2"
					   Margin="40 30">
				<!-- ÁªÑÊ†áÈ¢ò -->
				<StackPanel DockPanel.Dock="Top"
							Spacing="10">
					<TextBlock Text="{Binding SelectedGroupName}"
							   FontSize="24"
				               Foreground="Aquamarine"/>
					<TabControl/>
				</StackPanel>

				<!-- Ê∑ªÂä† -->
				<Button DockPanel.Dock="Bottom">Ê∑ªÂä†Todo Item</Button>

				<TreeView Margin="5">
					<TreeViewItem IsEnabled="True">
						<TreeViewItem.Header>
							Êú™ÂÆåÊàê
						</TreeViewItem.Header>

						<ListBox ItemsSource="{Binding CurrentTodoGroupYieldFinishItems}"
								 Name="YieldFinishTodoItemListBox">
							<ListBox.ContextMenu>
								<ContextMenu Name="TodoGroupYieldItems_ContextMenu">
									<MenuItem Header="Â§çÂà∂"
											  Click="Async_CopySelectedTodoItemTitle"/>
									<MenuItem Header="Âà†Èô§"/>
								</ContextMenu>
							</ListBox.ContextMenu>
							
							<ListBox.ItemTemplate>
								<DataTemplate x:DataType="modles:TodoItem">
									<!-- ÈÄâÈ°πÂç° -->
									<Expander HorizontalContentAlignment="Stretch"
										  Expanded="TodoItemListBox_Expander_Expanded">
										<Expander.Header>
											<DockPanel>
												<CheckBox DockPanel.Dock="Left"
														  IsChecked="{Binding IsFinish}">
													<TextBlock Text="{Binding Title}"/>
												</CheckBox>
											</DockPanel>
										</Expander.Header>

										<!-- ËØ¶ÁªÜ‰ø°ÊÅØ -->
										<TabControl TabStripPlacement="Top">
											<TabItem>
												<TabItem.Header>Title</TabItem.Header>
												<TextBox Text="{Binding Title}"/>
											</TabItem>
											<TabItem>
												<TabItem.Header>Deadline</TabItem.Header>
												<DatePicker SelectedDate="{Binding DeadLine}"/>
											</TabItem>
											<TabItem>
												<TabItem.Header>Description</TabItem.Header>
												<TextBox Text="{Binding Description}"></TextBox>
											</TabItem>
										</TabControl>

									</Expander>
								</DataTemplate>
							</ListBox.ItemTemplate>
						</ListBox>
					</TreeViewItem>

					<TreeViewItem>
						<TreeViewItem.Header>
							Â∑≤ÂÆåÊàê
						</TreeViewItem.Header>

						<ListBox ItemsSource="{Binding CurrentTodoGroupFinishItems}">
							<ListBox.ContextMenu>
								<ContextMenu Name="TodoGroupFinishItems_ContextMenu">
									<MenuItem Header="Â§çÂà∂"/>
									<MenuItem Header="Âà†Èô§"/>
								</ContextMenu>
							</ListBox.ContextMenu>
							
							<ListBox.ItemTemplate>
								<DataTemplate x:DataType="modles:TodoItem">
									<!-- ÈÄâÈ°πÂç° -->
									<Expander HorizontalContentAlignment="Stretch"
										  Expanded="TodoItemListBox_Expander_Expanded">
										<Expander.Header>
											<DockPanel>
												<CheckBox DockPanel.Dock="Left"
														  IsChecked="{Binding IsFinish}">
													<TextBlock Text="{Binding Title}"/>
												</CheckBox>
											</DockPanel>
										</Expander.Header>

										<!-- ËØ¶ÁªÜ‰ø°ÊÅØ -->
										<TabControl TabStripPlacement="Top">
											<TabItem>
												<TabItem.Header>Title</TabItem.Header>
												<TextBox Text="{Binding Title}"/>
											</TabItem>
											<TabItem>
												<TabItem.Header>Deadline</TabItem.Header>
												<DatePicker SelectedDate="{Binding DeadLine}"/>
											</TabItem>
											<TabItem>
												<TabItem.Header>Description</TabItem.Header>
												<TextBox Text="{Binding Description}"></TextBox>
											</TabItem>
										</TabControl>

									</Expander>
								</DataTemplate>
							</ListBox.ItemTemplate>
						</ListBox>


					</TreeViewItem>
				</TreeView>

				<!--
				<ListBox ItemsSource="{Binding CurrentTodoItems}">
					<ListBox.ItemTemplate>
						<DataTemplate x:DataType="modles:TodoItem">
							<Border Classes="Hover"
									Theme="{StaticResource CardBorder}"
									Margin="0 2"
									Opacity="0.95">
                                <TextBlock Text="{Binding Title}"/>
                            </Border>
						</DataTemplate>
					</ListBox.ItemTemplate>
				</ListBox>
					-->

			</DockPanel>
		</Grid>

		<!--
            <DockPanel>
                <Border DockPanel.Dock="Top"
                        IsHitTestVisible="False">
                    <TextBlock>This is a head</TextBlock>
                </Border>

                <TabControl TabStripPlacement="Left">
                    <TabItem Content="Hello 1" Header="Tab 1" />
                    <TabItem Content="Hello 2" Header="Tab 2" />
                    <TabItem Content="Hello 3" Header="Tab 3" />
                    <TabItem
                        Content="Hello 4"
                        Header="Tab 4"
                        IsEnabled="False" />
                </TabControl>
            </DockPanel>
		-->
	</Panel>

</Window>
